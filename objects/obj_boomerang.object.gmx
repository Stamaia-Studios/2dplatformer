<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boomerang</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>is_taken = false;
is_thrown = false;
is_moving = false;
is_returning = false;
is_falling = false;
throwDir = 0; // facing direction

boomerang_timer = 60;
objW = 16;
objH = 16;

// movements
vsp_init = 0;
hsp_init = 5;
vsp = 0;
hsp = 0;
grav = 0.2;
maxfallspeed = 10;
basemovespeed = 6;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// player has grabbed item remove it from play area
if(is_taken) {
    instance_destroy();
}

hitWall = place_meeting(x+4, y, obj_wall) | place_meeting(x-4, y, obj_wall); // True if rock is hitting wall
onground = place_meeting(x, y+1, obj_wall); 

// player has grabbed item remove it from play area
if (is_taken) {
    instance_destroy();
}

// player respawned item, move using a wide sine arc and destroy on collision
if (is_thrown) {

    // get the object moving and let physics take over
    if (!is_moving) {
        hsp = hsp_init * throwDir;
        vsp = vsp_init;    
        is_moving = true;
        is_returning = true;
    }
    
    // TODO add enemy hit and damage here or in enemy object!    
    
    
    // boomerang goes out for a period of time and then comes back
    if (boomerang_timer &gt; 0 &amp;&amp; is_returning) {
        boomerang_timer--;
    }
    
    // boomerang return 
    if(boomerang_timer &lt;= 0) {    
        if(is_returning) {
            hsp = hsp_init * -throwDir;
            is_returning = false;
        }
        
        // return boomerang to player
        if (!is_falling &amp;&amp; collision_rectangle(x-objW, y-objH, x+objW, y+objH, obj_player, false, true) &gt; -1) {            
            object_id = collision_rectangle(x-objW, y-objH, x+objW, y+objH, obj_player, false, true);
            if(object_id &gt; 0 &amp;&amp; !object_id.has_boomerang) {            
                object_id.has_boomerang = true;
                instance_destroy();            
            }
        }        
    }
   
    // vertical movement    
    //if (vsp &lt; maxfallspeed) {
    //   vsp += grav; // Increase downward movement speed based on gravity 
    //}
    
    // Slow vertical movement when jump button is released
    //if (!sign(vsp)) {    
    //    vsp /= 2;
    //}   
}

    if(hitWall) {
        hsp = 0;        
        vsp = 5;
        is_falling = true;
    }
    
    if(onground) {
      //hsp = 0;
      vsp = 0;      
      //is_moving = false;
      //is_returning = false;
      
      //boomerang_timer = 15;
    }

    // horizontal movement
    x += hsp;  

    // vertical movement
    y += vsp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
