<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_spider</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Enemy Variables
//call the parent creation code and other single instance code
event_inherited();
max_speed=0;
hsp=0;
maxfallspeed=0;

spawn[0] = x;
spawn[1] = y;

dir=0;

view_width=40;//max view width to activate

draw_enable_drawevent(true);//allow anything to be drawn

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Use event_inherited for collision detection


//only activate falling in this range
//pretty much all the checks needed to not go too far or anything
if(abs(obj_player.x-x)&lt;view_width&amp;&amp;obj_player.y&gt;=spawn[1]){
if(y&lt; obj_player.bbox_bottom){
maxfallspeed=.3;
}else{
maxfallspeed=0;
if(y&gt; obj_player.bbox_bottom)//will move up if the player jumps over
vsp=-1;

}

//vsp=0;
}else{
    maxfallspeed=0;
    vsp=0;
    if(y!=spawn[1]){
    maxfallspeed=0;
    vsp=0;
    if(abs(y-spawn[1])&lt;2){
    y=spawn[1];
    }else{
    if(y&gt;spawn[1])//y+=-1;
    vsp=-1;
    }
    //vsp-=.7;//.5 is very slow up
    }else{
    vsp=0;
    maxfallspeed=0;
    }
}

//moved graphics to draw event


//damage handling
if(place_meeting(x,y,obj_player)){
if(obj_player.inv&lt;1)//allow player to walk through
obj_player.hp--;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Extra Graphics -- spider line/webbing
draw_set_colour(c_white);//set the drawing color to white
//graw the actual line
draw_line(spawn[0],spawn[1]-abs(bbox_top-bbox_bottom),x,y-abs(bbox_top-bbox_bottom));

//make sure to actually draw the sprite :'V
draw_self();

if(debug_graphics){

draw_set_color(c_red);

draw_rectangle(spawn[0]-abs(bbox_left-bbox_right)*2,spawn[1],spawn[0]+view_width,
spawn[1]+room_height,1);


}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
