<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Controls

key_right = vk_right;
key_left = vk_left;
key_jump = ord('Z');
key_attack = ord('X');
key_down = vk_down;
key_run = vk_shift;
taptorun = false;
key_action = ord('C'); // pick_up and throw
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init Variables

currState = state.normal;
onground = true;

facing = 1; //last direction the player moved in
grav = 0.2; // Gravity
maxfallspeed = 8; // Max speed at which you can fall
hsp = 0; // Horizontal Speed
vsp = 0; // Vertical Speed
jumpspeed = 6; // Jump Speed Constant
basemovespeed = 2; // Movement Speed Constant
hsp_carry = 0;
vsp_carry = 0;
crouchmult = 0.5; // Crouch movement multiplier
runmult = 1.5 // Run movement multiplier
movestatusmult = 1; // For buffs/debuffs
glidemult = 0.25; // Glide speed mutlplier
jumpboost = 0.5; // Horizontal boost on jump
runjumpboost = 1; // Horizontal boost on runjump
dash_left_timer = 0;
dash_right_timer = 0;
dash_timeout = 15;
dashtrigger = false;
attackState = 0; //0-none, 1-dash, 2-crouch
dashAttackSpeed = 6; //speed of the dash attack
dashAttackCool = 25; //deceleration time
dashAttackTimer = dashAttackCool;
down_pressed = 0; 
jump_pressed = 0;
run_jump = false;
fallthrough = false;
attackTrigger = false;
facingDir = 1;
apexFallTrigger = -4; // fall speed reqiured to recieve additional gravity

chrH = 16; // half height of player in pixels
chrW = 16; // half width of player in pixels
has_gloves = false; // pick up flags - boxing gloves
glovesmult = 1.5; // damage multiplier
has_shorts = false; // boxing shorts
shortsmult = 1; // used for running and jumping
has_boomerang = false; // boomerang
has_throwable = false; // throwable item
throwable_id = 0; // place holder item id for pots/et;al

inv = 0;//invincibility 'steps' where the character cannot be damaged
inv_frames = 60;//frame native limit, potential 'Mario Star' effect -- 1 second at 60FPS
spawn[0] = x;spawn[1] = y;//default spawn information
max_hp=10;//max allottment of health, e.g level up health
hp = 10;// character health
last_hp=hp;//health to determine damage
last_dir=1;//last direction facing -- default is right
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Run a Player State

scr_input();

onground = place_meeting(x, y+1, obj_wall); // True if player is on the ground
crouchspeed = (basemovespeed * crouchmult) * movestatusmult; // Get current crouch speed
runspeed = (basemovespeed * runmult) * movestatusmult; // Get current run speed
movespeed = basemovespeed * movestatusmult; // Get current walk speed
gliding = !onground &amp;&amp; sign(vsp) &amp;&amp; keyboard_check(key_jump); // Check if can glide

switch (currState)
{
    case state.normal: scr_player_normal();
                        break;
    case state.dashing: scr_player_dashing();
                        break;
    case state.platform: scr_player_platform();
                        break;
}

scr_player_add_movement();
scr_player_action_event();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
