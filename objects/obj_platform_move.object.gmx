<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_platform_move</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_wall</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_platform_move</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Initialise Variables
movespeed = 2;                                      //Movement speed of platform
currenttarget = 0;                                  //The target currently being approached
targetpoints[0, 0] = 0;                             //Add inital position to the target arrays
targetpoints[0, 1] = 0;                             //NOTE: To add new nodes to platform path add this code to the instance creation code
originx = x;                                        //Start horizontal point of platform
originy = y;                                        //Start vertical point of platform
prevx = x;
prevy = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Check if platform has reached the target - then make up the difference and place the
// platform directly on the point
if point_distance(x, y, originx + targetpoints[currenttarget, 0], originy + targetpoints[currenttarget, 1]) &lt; movespeed {
    // Set platform to be exactly on point by moving the remaining distance
    move_towards_point(originx + targetpoints[currenttarget, 0],
                        originy + targetpoints[currenttarget, 1],
                        point_distance(x, y, originx + targetpoints[currenttarget, 0], originy + targetpoints[currenttarget, 1]));
    
    // Redirect platform to next node
    currenttarget += 1;
    if currenttarget &gt;= array_height_2d(targetpoints) {
        currenttarget = 0;
    }
}else{
    // Move platform towards the current target at the given speed
    move_towards_point(originx + targetpoints[currenttarget, 0], originy + targetpoints[currenttarget, 1], movespeed);
}

// Check if player is sitting on platform
if (place_meeting(x, y-1, obj_player)) {
    // Add to player position the change in platform position for each step
    if instance_exists(obj_player)
    {
        obj_player.x += (x - prevx);
        obj_player.y += (y - prevy);
    }
}

// Set the prev x,y to be used next step
prevx = x;
prevy = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
