<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dingo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///I'M TIRED OF NAMES (╯°□°）╯︵ ┻━┻  .... I mean I'm intializing all the variables and code here

event_inherited();


max_speed=.2;
max_jump = .5;//jump ability over time

max_pause = 60;//maximum wait time for moving again
pause = max_pause;//pause counter

dist = abs(obj_player.x-(x/*+dir_offset/2*/));;
view_distance = 250;
dir_offset = abs(bbox_left-bbox_right);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///BOOPS This is where the collsion and damge happens :P

dist=abs(obj_player.x-(x/*+dir_offset/2*/));
dir = sign(obj_player.x-(x/*+dir_offset/2*/));

if(dist&lt;view_distance/2)//make sure the player is in its view range
if(hsp==0&amp;&amp;pause&gt;=max_pause)
if(obj_player.bbox_top+abs(obj_player.bbox_top-obj_player.bbox_bottom)&gt;=
y&amp;&amp;obj_player.bbox_top&lt;=bbox_bottom){//check if player is in vertically
hsp=max_speed*dir;//set movement beyond zero
vsp=-max_jump;
}

event_inherited();//check for falling and moving

if(hsp!=0&amp;&amp;vsp==0){//reset counter without constant reset
hsp=0;
pause=-1;//-1 to offset the frame that will count this
}
if(vsp==0)pause++;//increment the counter only if stopped (on the ground)



if(place_meeting(x,y,obj_player)){//harm the player if colliding with this
if(obj_player.inv&lt;1)//allow player to walk through
obj_player.hp--;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///WHOOO More debug Graphics when there's so much on the screen already! -- Also have to draw the sprite

draw_sprite(spr_dingo,0,x,y);

if(debug_graphics){
draw_set_color(c_red);
draw_rectangle(x-view_distance/2,y,x+view_distance/2,y+abs(bbox_top-bbox_bottom),1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
