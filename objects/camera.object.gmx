<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///choose camera
cameraState = 2 // 1 - fixed on player
                // 2 - follows player
                // 3 - leads player
                
vOffset = 50; //the vertical offset of the camera from the player

//follow camera variable//////////////////////////////////////////////////////////
lag = 10; //how much the camera lags behind

//lead camera variables (These variables are finicky, since they affect each other)
leadLagX = 5; //divides the speed the camera tries to return to the player
leadLagY = 3; 
leadDistX = 2; //multiplier of the player's speed used to advance the camera infront
leadDistY = 2;
//////////////////////////////////////////////////////////////////////////////////
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Camera Follow
if(instance_exists(obj_player)){
    xV = view_xview[0]+(view_wview[0]/2);
    yV = view_yview[0]+(view_hview[0]/2);
    switch(cameraState){
        case 1:
        view_xview[0] += (obj_player.x-xV);
        view_yview[0] += (obj_player.y-vOffset-yV);
        break;
        case 2:
        view_xview[0] += (obj_player.x-xV) / lag;
        view_yview[0] += (obj_player.y-vOffset-yV) / lag;
        break;
        case 3:
        view_xview[0] += leadDistX*obj_player.hsp + (obj_player.x-xV)/leadLagX;
        view_yview[0] += leadDistY*obj_player.vsp + (obj_player.y-vOffset-yV)/leadLagY;
        break;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
